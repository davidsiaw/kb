# frozen_string_literal: true

module Keyboard
  def key(name, second = '', type: :normal, length: nil)
    lenclass = lenclass_for(length)
    div class: 'keyholder' do
      if type == :function
        a class: "white function key #{lenclass}" do
          div class: :keycap do
            text name
            span second, class: :side
          end
        end
      elsif type == :control
        a class: "white control key #{lenclass}" do
          div class: :keycap do
            text name
            br
            text second
          end
        end
      elsif type == :numpad
        a class: "white numpad key #{lenclass}" do
          div class: :keycap do
            div class: :numpad_label do
              div name, class: :numpad_main_label
              div second, class: :numpad_sub_label
            end
          end
        end
      else
        a class: "white key #{lenclass}" do
          div class: :keycap do
            text name
            br
            text second
          end
        end
      end
    end
  end

  def fkey(name, second = '', length: nil)
    key(name, second, type: :function, length: length)
  end

  def ckey(name, second = '', length: nil)
    key(name, second, type: :control, length: length)
  end

  def nkey(name, second = '', length: nil)
    key(name, second, type: :numpad, length: length)
  end

  def lenclass_for(length)
    return '' if length.nil?

    "#{length}type"
  end

  def key_block(style: '', &block)
    div id: :key_area, style: style do
      extend Keyboard
      instance_eval(&block)
    end
  end

  def sizes
    {
      one: '56',
      half: '26',
      quarter: '14'
    }
  end

  def spacer(size)
    len = sizes[size]
    div class: :spacer, style: "width: #{len}px" do
    end
  end

  def keyboard(&block)
    div id: :keyboard do
      extend Keyboard
      instance_eval(&block)
    end
  end

  def outer_row(&block)
    @rows ||= 0
    @rows += 1
    if @rows > 1
      div class: :row_space do
      end
    end
    div class: :keyboard_row do
      extend Keyboard
      instance_eval(&block)
    end
  end

  def row_break
    div class: :inner_row do
    end
  end

  def outer_column(&block)
    div class: :column_space do
      extend Keyboard
      instance_eval(&block)
    end
  end
end

empty_page '', 'My first weaver page' do
  request_css '/styles/main.css'

  div do
  extend Keyboard
    keyboard do
      outer_column do
        outer_row do
          key_block do
            fkey 'Esc'
          end
          spacer :one
          key_block do
            fkey 'F1'
            fkey 'F2'
            fkey 'F3'
            fkey 'F4'
          end
          spacer :half
          key_block do
            fkey 'F5'
            fkey 'F6'
            fkey 'F7'
            fkey 'F8'
          end
          spacer :half
          key_block do
            fkey 'F9'
            fkey 'F10'
            fkey 'F11'
            fkey 'F12'
          end
        end

        outer_row do
          key_block do
            key '~', '`'
            key '!', '1'
            key '@', '2'
            key '#', '3'
            key '$', '4'
            key '%', '5'
            key '^', '6'
            key '&', '7'
            key '*', '8'
            key '(', '9'
            key ')', '0'
            key '_', '-'
            key '+', '='
            fkey 'Backspace', length: :d

            row_break
            fkey 'Tab', length: :b
            'qwertyuiop'.split('').each do |x|
              key x.upcase
            end
            key '{', '['
            key '}', ']'
            fkey 'Enter', length: :l2
            # key '|', '\\', length: :b

            row_break
            fkey 'Caps Lock', length: :c
            'asdfghjkl'.split('').each do |x|
              key x.upcase
            end
            key ':', ';'
            key '"', "'"
            key '"', "'"

            row_break
            fkey 'LShift', length: :e
            'zxcvbnm'.split('').each do |x|
              key x.upcase
            end
            key '<', ','
            key '>', '.'
            key '?', '/'
            fkey 'RShift', length: :f

            row_break
            fkey 'LCtrl', length: :a
            fkey 'LOS', length: :a
            fkey 'LAlt', length: :a

            fkey '', length: :s

            fkey 'RAlt', length: :a
            fkey 'ROS', length: :a
            fkey 'Menu', length: :a
            fkey 'RCtrl', length: :a
          end
        end
      end

      outer_column do
        outer_row do
          spacer :quarter
          key_block do
            ckey 'Print', 'Scrn'
            ckey 'Pause', 'Break'
            ckey 'Scroll', 'Lock'
          end
        end

        outer_row do
          spacer :quarter
          key_block do
            ckey 'Insert'
            ckey 'Home'
            ckey 'Page', 'Up'
            row_break
            ckey 'Delete'
            ckey 'End'
            ckey 'Page', 'Down'
          end
        end

        outer_row do
        end
        outer_row do
          spacer :quarter
          key_block style: 'position: relative; top:14px; left:59px;' do
            key '↑'
          end
          row_break
          key_block style: 'position: relative; top:5px; left:13px;' do
            key '←'
            key '↓'
            key '→'
          end
        end
      end

      outer_column do
        outer_row do
          spacer :quarter
        end
        outer_row do
          spacer :quarter
          key_block do
            ckey 'Num', 'Lock'
            nkey '/'
            nkey '*'
            row_break
            nkey '7', 'Home'
            nkey '8', '↑'
            nkey '9', 'PgUp'
            row_break
            nkey '4', '←'
            nkey '5'
            nkey '6', '→'
            row_break
            nkey '1', 'End'
            nkey '2', '↓'
            nkey '3', 'PgDn'
            row_break
            nkey '0', 'Ins', length: :d
            nkey '.', 'Del'
          end
        end
      end

      outer_column do
        outer_row do
          spacer :quarter
        end
        outer_row do
          text ''
          key_block style: 'position: relative; left:-4px' do
            key '-'
            row_break
            nkey '+', length: :b1
            row_break
            nkey '', 'Enter', length: :b1
          end
        end
      end
    end
  end
end
